package homepage

import "talibox/views/uiModels"
import "strings"

templ GenericTable[T uiModels.Entity](objectList []T) {
	<div
		class="px-4 sm:px-6 lg:px-8"
		x-data="{ open: false }"
	>
		<div class="sm:flex sm:items-center">
			<div class="sm:flex-auto">
				<h1 class="text-base font-semibold leading-6 text-gray-900"></h1>
				// <p class="mt-2 text-sm text-gray-700">A list of all the users in your account including their name, title, email and role.</p>
			</div>
			<div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
				<button
					type="button"
					hx-get={ "/" + strings.ToLower(objectList[0].GetInstanceName()) + "/form" }
					hx-swap="innerHTML transition:true"
					hx-target="#formCard"
					@click="open = !open"
					class="block rounded-md bg-indigo-600 px-3 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
				>
					<span class="shrink-0 material-symbols-outlined">add</span>
				</button>
				@FloatingCard2()
			</div>
		</div>
		<div class="mt-8 flow-root">
			<div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
				<div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
					<div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 sm:rounded-lg">
						<table class="min-w-full divide-y divide-gray-300">
							<thead class="bg-gray-50">
								@GenTableHeader(objectList[0].GetFields())
							</thead>
							<tbody id={ objectList[0].GetInstanceName() + "table" } class="divide-y divide-gray-200 bg-white">
								for _, object := range objectList {
									@GenTableRow(object.GetFieldsValues(), object.GetInstanceName())
								}
							</tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
}

// genericTable generates an HTML table based on the fields of the given object.
templ GenTableRow(fieldValues []string, objectName string) {
	<tr id={ objectName + fieldValues[0] }>
		<td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-6">{ fieldValues[0] }</td>
		for _, field := range fieldValues[1:] {
			<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">{ field }</td>
		}
		<td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
			<a
				hx-get={ "/user/form/" + fieldValues[0] }
				hx-swap="innerHTML transition:true"
				hx-target="#formCard"
				@click="open = true"
				class="text-indigo-600 hover:text-indigo-900 cursor-pointer"
			>
				<span class="h-6 w-6 shrink-0 material-symbols-outlined">edit</span>
			</a>
			<a
				hx-delete={ "/user/" + fieldValues[0] }
				hx-confirm="Are you sure you want to delete this user?"
				hx-target={ "#" + objectName + fieldValues[0] }
				hx-swap="transition:true"
				class="text-pink-800 hover:text-rose-900"
			>
				<span class="h-6 w-6 shrink-0 material-symbols-outlined">delete</span>
			</a>
		</td>
	</tr>
}

templ GenTableHeader(fieldNames []string) {
	<tr>
		<th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6">{ fieldNames[0] }</th>
		for _, fieldName := range fieldNames[1:] {
			<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">{ fieldName }</th>
		}
		<th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6">
			<span class="sr-only">Edit</span>
		</th>
	</tr>
}

templ FloatingCard2() {
	<div
		x-show="open"
		class="relative z-40"
		role="dialog"
	>
		<div class="fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity"></div>
		<div
			class="fixed inset-0 z-40 w-screen overflow-y-auto p-4 sm:p-6 md:p-20"
		>
			<div class="mx-auto max-w-xl transform divide-y divide-gray-100 overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all">
				<div
					@click.outside="open = false"
					class="relative p-8"
					id="formCard"
				></div>
			</div>
		</div>
	</div>
}

templ FloatingCard(content templ.Component, data string) {
	<div
		x-show={ data }
		class="relative z-40"
		role="dialog"
	>
		<div class="fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity"></div>
		<div
			class="fixed inset-0 z-40 w-screen overflow-y-auto p-4 sm:p-6 md:p-20"
		>
			<div class="mx-auto max-w-xl transform divide-y divide-gray-100 overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all">
				<div
					@click.outside={ data + " = false" }
					class="relative p-8"
					id="formCard"
				>
					@content
				</div>
			</div>
		</div>
	</div>
}
