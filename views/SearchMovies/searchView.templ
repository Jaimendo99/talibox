package SearchMovies

import (
	"talibox/views/uiModels"
	"talibox/views/HomePage"
)

templ SearchView() {
	<div x-data="{details:false}">
		@homepage.FloatingCard(
			WeeklyGrossView(uiModels.MovieWeeklyGrosses{}),
			"details",
		)
		<div id="resultMessage" class="mt-4"></div>
		<label for="search" class="block text-sm font-medium leading-6 text-gray-900">Quick search</label>
		<div class="relative mt-2 flex items-center">
			<input
				hx-post={ "/search" }
				hx-trigger="keyup delay:800ms"
				hx-target="#search-results"
				placeholder="Search for movies..."
				hx-swap="innerHTML transition:true"
				hx-indicator=".htmx-indicator"
				type="text"
				name="q"
				id="search"
				class="block w-full rounded-md border-0 py-1.5 pr-14 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
			/>
			<div class="absolute inset-y-0 right-0 flex py-1.5 pr-1.5">
				<kbd class="inline-flex items-center rounded border border-gray-200 px-1 font-sans text-xs text-gray-400">âŒ˜K</kbd>
			</div>
		</div>
		<div id="search-results" class="mt-4"></div>
	</div>
}

templ MovieCard(movie uiModels.MovieSearch, logged bool) {
	<li class="col-span-1 flex flex-col divide-y divide-gray-200 rounded-lg bg-white text-center shadow">
		<div class="flex flex-auto flex-col p-8">
			<img class="mx-auto h-32 w-24 flex-shrink-0 rounded-md" src={ movie.ImgUrl } alt=""/>
			<h3 class="mt-6 text-sm font-medium text-gray-900">{ movie.Title }</h3>
			<dl class="mt-1 flex flex-grow flex-col justify-between">
				<dt class="sr-only">Title</dt>
				<dd class="text-sm text-gray-500">{ movie.TitleId }</dd>
				<dt class="sr-only">Role</dt>
				<dd class="mt-3">
					<span class="inline-flex items-center rounded-full bg-green-50 px-2 py-1 text-xs font-medium text-green-700 ring-1 ring-inset ring-green-600/20">{ movie.Year }</span>
				</dd>
			</dl>
		</div>
		<div>
			<div class="-mt-px flex divide-x divide-gray-200">
				<div class="flex w-0 flex-1">
					<a
						hx-get={ "/movie?id=" + movie.TitleId }
						hx-target="#detailsView"
						hx-swap="outerHTML"
						@click="details = !details"
						x-bind:disable="details"
						class="cursor-pointer relative -mr-px inline-flex w-0 flex-1 items-center justify-center gap-x-3 rounded-bl-lg border border-transparent py-4 text-sm font-semibold text-gray-900"
					>
						<span class="h-6 w-6 shrink-0 material-symbols-outlined">
							info
						</span>
						Details
					</a>
				</div>
				if logged {
					<div class="-ml-px flex w-0 flex-1">
						<a
							hx-get={ "/add?id=" + movie.TitleId +
								"&title=" + movie.Title +
								"&year=" + movie.Year +
								"&actors=" + formatList(movie.Actors) +
								"&genres=" + formatList(movie.Genres) }
							hx-target="#resultMessage"
							hx-swap="transition:true"
							class="cursor-pointer relative inline-flex w-0 flex-1 items-center justify-center gap-x-3 rounded-br-lg border border-transparent py-4 text-sm font-semibold text-gray-900"
						>
							<span class="h-6 w-6 shrink-0 material-symbols-outlined">
								add
							</span>
							Add
						</a>
					</div>
				}
			</div>
		</div>
	</li>
}

templ SucessMessage(text string) {
	<div class="bg-green-50 border-l-4 border-green-400 p-4">
		<div class="flex">
			<div class="flex-shrink-0">
				<svg class="h-5 w-5 text-green-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
					<path fill-rule="evenodd" d="M0 11c0-1.1.9-2 2-2h16c1.1 0 2 .9 2 2v5c0 1.1-.9 2-2 2H2c-1.1 0-2-.9-2-2v-5zm2 2v-3h16v3H2z" clip-rule="evenodd"></path>
				</svg>
			</div>
			<div class="ml-3">
				<p class="text-sm text-green-700">
					{ text }
				</p>
			</div>
		</div>
	</div>
}

templ FailMessage(text string) {
	<div class="bg-red-50 border-l-4 border-red-400 p-4">
		<div class="flex">
			<div class="flex-shrink-0">
				<svg class="h-5 w-5 text-red-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
					<path fill-rule="evenodd" d="M10 3c1.1 0 2 .9 2 2v7c0 .55-.45 1-1 1s-1-.45-1-1V5c0-.55.45-1 1-1z" clip-rule="evenodd"></path>
					<path fill-rule="evenodd" d="M10 17c-1.1 0-2-.9-2-2v-2c0-1.1.9-2 2-2s2 .9 2 2v2c0 1.1-.9 2-2 2z" clip-rule="evenodd"></path>
				</svg>
			</div>
			<div class="ml-3">
				<p class="text-sm text-red-700">
					{ text }
				</p>
			</div>
		</div>
	</div>
}

templ SearchResults(movies []uiModels.MovieSearch, logged bool) {
	<ul role="list" class="grid grid-cols-1 gap-6 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
		for _, movie := range movies {
			@MovieCard(movie, logged)
		}
	</ul>
}

templ DetailsView(movie uiModels.MovieWeeklyGrosses) {
	<div x-show="details" class="bg-white shadow sm:rounded-lg">
		<div class="px-4 py-5 sm:p-6">
			<div id="detailsView">
				@WeeklyGrossView(movie)
			</div>
		</div>
	</div>
}

func formatList(values []string) string {
	if len(values) == 0 {
		return ""
	}

	var result string
	for _, value := range values {
		result += value + ", "
	}
	return result[:len(result)-2]
}
